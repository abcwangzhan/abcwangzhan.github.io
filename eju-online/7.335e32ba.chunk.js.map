{"version":3,"sources":["pages/Library/Quick/Parsing/Parsing.tsx"],"names":["Parsing","history","useHistory","tag","getUrlParams","state","useContext","ProviderContext","quick","selectAnswer","quickTrueAnswer","id","type","color","onClick","go","defaultIndex","loop","indicator","onIndexChange","document","getElementById","scrollTo","map","item","index","questionId","question","parse","options","answer","selectAs","Item","key","className","length","getMathpix","val","idx","isTrue","selectNum","letterToNum","trueNum"],"mappings":"sRAgIeA,EAzGW,WACxB,IAAMC,EAAUC,cACRC,EAAQC,cAARD,IACAE,EAAUC,qBAAWC,KAArBF,MACAG,EAAyCH,EAAzCG,MAAOC,EAAkCJ,EAAlCI,aAAcC,EAAoBL,EAApBK,gBAmE7B,OACE,kBAAC,IAAD,CAAMC,GAAG,cACP,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,uBACEC,KAAK,QACLC,MAAM,UACNC,QAAS,kBAAYb,EAAQc,IAAI,QAIvC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,aAAc,EACdC,MAAM,EACNC,UAAW,kBAAY,MACvBC,cAlFoB,WAAa,IAAD,EACtC,UAAAC,SAASC,eAAe,qBAAxB,SAAuCC,SAAS,EAAG,MAM5C,OAALd,QAAK,IAALA,OAAA,EAAAA,EAAOe,KAAI,SAACC,EAAMC,GAChB,IAAQC,EAAyCF,EAAzCE,WAAYC,EAA6BH,EAA7BG,SAAUC,EAAmBJ,EAAnBI,MAAOC,EAAYL,EAAZK,QAE7BC,IADQ,OAAGpB,QAAH,IAAGA,OAAH,EAAGA,EAAkBe,KACJ,IAAzBK,OACFC,EAAQ,OAAGtB,QAAH,IAAGA,OAAH,EAAGA,EAAegB,GAChC,OACE,kBAAC,IAAOO,KAAR,CAAaC,IAAKP,GAChB,kBAAC,IAAD,CAAWQ,UAAU,SACnB,kBAAC,IAAD,KAAW/B,GACX,kBAAC,IAAD,KACGsB,EAAQ,EADX,IACejB,EAAM2B,SAGvB,kBAAC,IAAD,KAAcC,YAAWT,IACzB,kBAAC,IAAD,KACGE,EAAQN,KAAI,SAACc,EAAKC,GACjB,IAAMC,EAAST,IAAWC,EACpBS,EACJC,IAAYV,GACRW,EAAUD,IAAYX,GAC5B,OAAIS,EAEA,kBAAC,IAAD,CACEL,UAAWM,IAAcF,EAAM,SAAW,GAC1CL,IAAKI,GAEJA,GAIHG,IAAcF,EAEd,kBAAC,IAAD,CAAYJ,UAAU,QAAQD,IAAKI,GAChCA,GAIHK,IAAYJ,EAEZ,kBAAC,IAAD,CAAYJ,UAAU,SAASD,IAAKI,GACjCA,GAIA,kBAAC,IAAD,CAAYJ,IAAKI,GAAMA,OAGlC,kBAAC,IAAD,KACE,yBAAKH,UAAU,SAAf,iCAA6BJ,GAD/B,qBAGE,6BACCM,YAAWR,UAId,KAyBN,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,uBAAQhB,KAAK,UAAUE,QAAS,kBAAYb,EAAQc,IAAI,KAAxD","file":"7.335e32ba.chunk.js","sourcesContent":["import { letterToNum } from '@/constants/globalDatas';\r\nimport { ProviderContext } from '@/reducer/context';\r\nimport getUrlParams from '@/utils/get-url-params';\r\nimport { Button, Icon } from 'antd-mobile';\r\nimport { Swiper } from 'antd-mobile-v5';\r\nimport React, { ReactElement, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Page,\r\n  HeaderBox,\r\n  GrayFont,\r\n  FontContent,\r\n  CarouseBox,\r\n  ButtonBox,\r\n  ButtonBoxInner,\r\n  ParsingFont,\r\n  HeaderBlank,\r\n  HeaderInner,\r\n  ButtonBlank,\r\n} from '../../styles';\r\nimport getMathpix from '../../utils/getMathpix';\r\nimport { AnswerBox, AnswerItem } from '../styles';\r\n\r\nconst Parsing: React.FC = () => {\r\n  const history = useHistory();\r\n  const { tag } = getUrlParams();\r\n  const { state } = useContext(ProviderContext);\r\n  const { quick, selectAnswer, quickTrueAnswer } = state;\r\n  // 监听跑马灯变化\r\n  const handleOnIndexChange = (): void => {\r\n    document.getElementById('quick_page')?.scrollTo(0, 0);\r\n  };\r\n\r\n  // 获得解析列表\r\n  const getParsingList = (): ReactElement[] => {\r\n    return (\r\n      quick?.map((item, index) => {\r\n        const { questionId, question, parse, options } = item;\r\n        const trueAnswer = quickTrueAnswer?.[index];\r\n        const { answer } = trueAnswer || {};\r\n        const selectAs = selectAnswer?.[index];\r\n        return (\r\n          <Swiper.Item key={questionId}>\r\n            <HeaderBox className=\"lr-pd\">\r\n              <GrayFont>{tag}</GrayFont>\r\n              <GrayFont>\r\n                {index + 1}/{quick.length}\r\n              </GrayFont>\r\n            </HeaderBox>\r\n            <FontContent>{getMathpix(question)}</FontContent>\r\n            <AnswerBox>\r\n              {options.map((val, idx) => {\r\n                const isTrue = answer === selectAs;\r\n                const selectNum =\r\n                  letterToNum[selectAs as keyof typeof letterToNum];\r\n                const trueNum = letterToNum[answer as keyof typeof letterToNum];\r\n                if (isTrue) {\r\n                  return (\r\n                    <AnswerItem\r\n                      className={selectNum === idx ? 'active' : ''}\r\n                      key={val}\r\n                    >\r\n                      {val}\r\n                    </AnswerItem>\r\n                  );\r\n                }\r\n                if (selectNum === idx) {\r\n                  return (\r\n                    <AnswerItem className=\"error\" key={val}>\r\n                      {val}\r\n                    </AnswerItem>\r\n                  );\r\n                }\r\n                if (trueNum === idx) {\r\n                  return (\r\n                    <AnswerItem className=\"active\" key={val}>\r\n                      {val}\r\n                    </AnswerItem>\r\n                  );\r\n                }\r\n                return <AnswerItem key={val}>{val}</AnswerItem>;\r\n              })}\r\n            </AnswerBox>\r\n            <ParsingFont>\r\n              <div className=\"title\">正确答案：{answer}</div>\r\n              解析：\r\n              <br />\r\n              {getMathpix(parse)}\r\n            </ParsingFont>\r\n          </Swiper.Item>\r\n        );\r\n      }) || []\r\n    );\r\n  };\r\n  return (\r\n    <Page id=\"quick_page\">\r\n      <HeaderBox>\r\n        <HeaderBlank />\r\n        <HeaderInner>\r\n          <Icon\r\n            type=\"cross\"\r\n            color=\"#262626\"\r\n            onClick={(): void => history.go(-2)}\r\n          />\r\n        </HeaderInner>\r\n      </HeaderBox>\r\n      <CarouseBox>\r\n        <Swiper\r\n          defaultIndex={0}\r\n          loop={false}\r\n          indicator={(): null => null}\r\n          onIndexChange={handleOnIndexChange}\r\n        >\r\n          {getParsingList()}\r\n        </Swiper>\r\n      </CarouseBox>\r\n      <ButtonBox>\r\n        <ButtonBlank />\r\n        <ButtonBoxInner>\r\n          <Button type=\"primary\" onClick={(): void => history.go(-1)}>\r\n            返回报告\r\n          </Button>\r\n        </ButtonBoxInner>\r\n      </ButtonBox>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Parsing;\r\n"],"sourceRoot":""}