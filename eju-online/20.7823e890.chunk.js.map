{"version":3,"sources":["pages/Setting/Feedback/Feedback.tsx"],"names":["Feedback","useState","feedType","setFeedType","feedContent","setFeedContent","fileArr","setFileArr","useMutation","CREAT_FEEDBACK","onCompleted","changeSuccess","onError","show","handleSave","history","useHistory","info","goBack","size","data","feedbackType","cols","value","onOk","PickItem","placeholder","rows","count","clear","onChange","val","files","type","index","selectable","length","mt","onClick","checkValues","variables","id","fbType","fbContent","fbImage","url"],"mappings":"wXAwGeA,EAvFY,WACzB,MAAgCC,mBAAmB,IAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8BJ,mBAAsB,IAApD,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAqBC,YAAYC,IAAgB,CAC/CC,YAAa,kBAAMC,KACnBC,QAAS,kBAAM,IAAMC,KAAK,+BAFrBC,EAAP,oBAIMC,EAAUC,cAuCVL,EAAgB,WACpB,IAAMM,KAAK,2BAAQ,KAAK,kBAAMF,EAAQG,aAExC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iCACA,uBAAYC,KAAK,OAEjB,uBACEC,KAAMC,IACNC,KAAM,EACNC,MAAOrB,EACPsB,KAAM,SAACD,GAAD,OAA2BpB,EAAYoB,KAE7C,kBAACE,EAAA,EAAD,CAAUC,YAAY,4DAExB,2BACE,uBACEA,YAAY,6CACZC,KAAM,EACNC,MAAO,IACPC,OAAK,EACLC,SAAU,SAACC,GAAD,OAAe1B,EAAe0B,GAAO,QAGnD,uBAAYZ,KAAK,OACjB,uBACEW,SAhEW,SAACE,EAAoBC,EAAcC,GAClD3B,EAAWyB,IAgEPA,MAAO1B,EACP6B,WAAY7B,EAAQ8B,OAAS,IAE/B,uBAAYjB,KAAK,OAEjB,kBAAC,IAAD,CAAec,KAAK,UAAUI,GAAG,QAAQC,QAjDxB,WAEC,IAAD,GAjBD,WAClB,QAAQ,GACN,KAAKpC,EAASkC,OAAS,EACrB,IAAMnB,KAAK,8CACX,MACF,MAAOb,EACL,IAAMa,KAAK,8CACX,MACF,QACE,OAAO,EAEX,OAAO,GAMHsB,IACFzB,EAAW,CACT0B,UAAW,CACTC,GAAI,MACJC,OAAQxC,EAAS,GACjByC,UAAWvC,EACXwC,QAAO,UAAEtC,EAAQ,UAAV,aAAE,EAAYuC,SAyCzB","file":"20.7823e890.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  List,\r\n  Picker,\r\n  WhiteSpace,\r\n  TextareaItem,\r\n  ImagePicker,\r\n  Toast,\r\n} from 'antd-mobile';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport PickItem from '@/components/PickItem';\r\nimport { feedbackType } from '@/constants/globalDatas';\r\nimport { CREAT_FEEDBACK } from '@/helpers/APIHelper';\r\nimport { Page, PageTitle, PrimaryButton } from '../../Login/styles';\r\nimport { ImageFile } from '../types';\r\n\r\nconst Feedback: React.FC = () => {\r\n  const [feedType, setFeedType] = useState<string[]>([]); // 反馈类型\r\n  const [feedContent, setFeedContent] = useState(''); // 反馈内容\r\n  const [fileArr, setFileArr] = useState<ImageFile[]>([]); // 反馈图片\r\n  const [handleSave] = useMutation(CREAT_FEEDBACK, {\r\n    onCompleted: () => changeSuccess(),\r\n    onError: () => Toast.show('提交失败'),\r\n  });\r\n  const history = useHistory();\r\n  // 选择图片\r\n  const onChange = (files: ImageFile[], type: string, index?: number): void => {\r\n    setFileArr(files);\r\n    console.log(files, type, index);\r\n  };\r\n\r\n  // 页面校验\r\n  const checkValues = (): boolean => {\r\n    switch (false) {\r\n      case feedType.length > 0:\r\n        Toast.info('请选择反馈类型');\r\n        break;\r\n      case !!feedContent:\r\n        Toast.info('请输入反馈内容');\r\n        break;\r\n      default:\r\n        return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // 提交\r\n  const handleSubmit = (): void => {\r\n    console.log(fileArr);\r\n    if (checkValues()) {\r\n      handleSave({\r\n        variables: {\r\n          id: '111',\r\n          fbType: feedType[0],\r\n          fbContent: feedContent,\r\n          fbImage: fileArr[0]?.url,\r\n        },\r\n      });\r\n    }\r\n    // history.goBack();\r\n  };\r\n\r\n  // 保存成功\r\n  const changeSuccess = (): void => {\r\n    Toast.info('保存成功', 1.5, () => history.goBack());\r\n  };\r\n  return (\r\n    <Page>\r\n      <PageTitle>意见反馈</PageTitle>\r\n      <WhiteSpace size=\"xl\" />\r\n\r\n      <Picker\r\n        data={feedbackType}\r\n        cols={1}\r\n        value={feedType}\r\n        onOk={(value: string[]): void => setFeedType(value)}\r\n      >\r\n        <PickItem placeholder=\"请选择反馈问题类型\" />\r\n      </Picker>\r\n      <List>\r\n        <TextareaItem\r\n          placeholder=\"请输入您的意见\"\r\n          rows={5}\r\n          count={300}\r\n          clear\r\n          onChange={(val): void => setFeedContent(val || '')}\r\n        />\r\n      </List>\r\n      <WhiteSpace size=\"xl\" />\r\n      <ImagePicker\r\n        onChange={onChange}\r\n        files={fileArr}\r\n        selectable={fileArr.length < 4}\r\n      />\r\n      <WhiteSpace size=\"xl\" />\r\n\r\n      <PrimaryButton type=\"primary\" mt=\"200px\" onClick={handleSubmit}>\r\n        提交\r\n      </PrimaryButton>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n"],"sourceRoot":""}