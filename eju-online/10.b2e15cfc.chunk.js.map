{"version":3,"sources":["pages/Library/Topic/Parsing/Parsing.tsx"],"names":["Parsing","history","useHistory","tag","getUrlParams","state","useContext","ProviderContext","topic","topicSelectAnswer","type","color","onClick","go","dots","style","height","map","topicItem","index","questionId","question","checkAnswers","parse","letterTemp","letterStr","split","letterTrueTemp","prevSelect","className","length","item","itemLabel","splice","join","item2","answer"],"mappings":"kRA2HeA,EAnGW,WACxB,IAAMC,EAAUC,cACRC,EAAQC,cAARD,IAEAE,EAAUC,qBAAWC,KAArBF,MACR,EAA+CA,EAAvCG,aAAR,MAAgB,GAAhB,IAA+CH,EAA3BI,yBAApB,MAAwC,GAAxC,EAEA,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBACEC,KAAK,QACLC,MAAM,UACNC,QAAS,kBAAYX,EAAQY,IAAI,OAGrC,kBAAC,IAAD,KACE,uBAAUC,MAAM,EAAOC,MAAO,CAAEC,OAAQ,SAAxC,OACGR,QADH,IACGA,OADH,EACGA,EAAOS,KAAI,SAACC,EAAWC,GACtB,IAAQC,EAA8CF,EAA9CE,WAAYC,EAAkCH,EAAlCG,SAAUC,EAAwBJ,EAAxBI,aAAcC,EAAUL,EAAVK,MACtCC,EAAaC,IAAUC,MAAM,IAC7BC,EAAiBF,IAAUC,MAAM,IAEjCE,EAAanB,EADHU,EAAQ,GAExB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWU,UAAU,SACnB,kBAAC,IAAD,KACGT,EADH,IACgBjB,GAEhB,kBAAC,IAAD,KACGgB,EAAQ,EADX,IACeX,EAAMsB,SAGvB,kBAAC,IAAD,KAAcT,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,qBADF,OAEGC,QAFH,IAEGA,OAFH,EAEGA,EAAcL,KAAI,SAACc,GAElB,IAAMC,EAAYR,EACfS,OAAO,EAAGF,EAAKD,QACfI,KAAK,IACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAeF,GACf,kBAAC,IAAD,YACGD,QADH,IACGA,OADH,EACGA,EAAMd,KAAI,SAACkB,GACV,OACE,kBAAC,IAAD,CACEN,UACEM,EAAMC,UAAN,OAAiBR,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAaI,IAC1B,GACA,mBAUtB,kBAAC,IAAD,KACE,yBAAKH,UAAU,SAAf,4BADF,OAEGP,QAFH,IAEGA,OAFH,EAEGA,EAAcL,KAAI,SAACc,GAElB,IAAMC,EAAYL,EACfM,OAAO,EAAGF,EAAKD,QACfI,KAAK,IACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAeF,GACf,kBAAC,IAAD,YACGD,QADH,IACGA,OADH,EACGA,EAAMd,KAAI,SAACkB,GAAD,OAAWA,EAAMC,eAKpC,6BAhBF,qBAkBE,6BACCb,SAOb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAQb,KAAK,UAAUE,QAAS,kBAAYX,EAAQY,IAAI,KAAxD","file":"10.b2e15cfc.chunk.js","sourcesContent":["import { letterStr } from '@/constants/globalDatas';\r\nimport { ProviderContext } from '@/reducer/context';\r\nimport getUrlParams from '@/utils/get-url-params';\r\nimport { Button, Carousel, Icon } from 'antd-mobile';\r\nimport React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Page,\r\n  HeaderBox,\r\n  GrayFont,\r\n  FontContent,\r\n  CarouselItem,\r\n  CarouseBox,\r\n  ButtonBox,\r\n  ButtonBoxInner,\r\n  ParsingFont,\r\n  ResolveBox,\r\n  ResolveItem,\r\n  ResolveLabel,\r\n  ResolveResultItem,\r\n  ResolveResultList,\r\n  ResolveTitle,\r\n} from '../../styles';\r\n\r\nconst Parsing: React.FC = () => {\r\n  const history = useHistory();\r\n  const { tag } = getUrlParams();\r\n\r\n  const { state } = useContext(ProviderContext);\r\n  const { topic = [], topicSelectAnswer = {} } = state;\r\n\r\n  return (\r\n    <Page>\r\n      <HeaderBox>\r\n        <Icon\r\n          type=\"cross\"\r\n          color=\"#262626\"\r\n          onClick={(): void => history.go(-3)}\r\n        />\r\n      </HeaderBox>\r\n      <CarouseBox>\r\n        <Carousel dots={false} style={{ height: '100%' }}>\r\n          {topic?.map((topicItem, index) => {\r\n            const { questionId, question, checkAnswers, parse } = topicItem;\r\n            const letterTemp = letterStr.split(''); // 遍历解答label\r\n            const letterTrueTemp = letterStr.split(''); // 遍历正确答案label\r\n            const prevNum = index + 1;\r\n            const prevSelect = topicSelectAnswer[prevNum];\r\n            return (\r\n              <CarouselItem>\r\n                <HeaderBox className=\"lr-pd\">\r\n                  <GrayFont>\r\n                    {questionId} {tag}\r\n                  </GrayFont>\r\n                  <GrayFont>\r\n                    {index + 1}/{topic.length}\r\n                  </GrayFont>\r\n                </HeaderBox>\r\n                <FontContent>{question}</FontContent>\r\n                <ResolveBox>\r\n                  <ResolveTitle>解答</ResolveTitle>\r\n                  {checkAnswers?.map((item) => {\r\n                    // 获取答案label\r\n                    const itemLabel = letterTemp\r\n                      .splice(0, item.length)\r\n                      .join('');\r\n                    return (\r\n                      <ResolveItem>\r\n                        <ResolveLabel>{itemLabel}</ResolveLabel>\r\n                        <ResolveResultList>\r\n                          {item?.map((item2) => {\r\n                            return (\r\n                              <ResolveResultItem\r\n                                className={\r\n                                  item2.answer === prevSelect?.[itemLabel]\r\n                                    ? ''\r\n                                    : 'error'\r\n                                }\r\n                              />\r\n                            );\r\n                          })}\r\n                        </ResolveResultList>\r\n                      </ResolveItem>\r\n                    );\r\n                  })}\r\n                </ResolveBox>\r\n                <ParsingFont>\r\n                  <div className=\"title\">正确答案</div>\r\n                  {checkAnswers?.map((item) => {\r\n                    // 获取答案label\r\n                    const itemLabel = letterTrueTemp\r\n                      .splice(0, item.length)\r\n                      .join('');\r\n                    return (\r\n                      <ResolveItem>\r\n                        <ResolveLabel>{itemLabel}</ResolveLabel>\r\n                        <ResolveResultList>\r\n                          {item?.map((item2) => item2.answer)}\r\n                        </ResolveResultList>\r\n                      </ResolveItem>\r\n                    );\r\n                  })}\r\n                  <br />\r\n                  解析：\r\n                  <br />\r\n                  {parse}\r\n                </ParsingFont>\r\n              </CarouselItem>\r\n            );\r\n          })}\r\n        </Carousel>\r\n      </CarouseBox>\r\n      <ButtonBox>\r\n        <ButtonBoxInner>\r\n          <Button type=\"primary\" onClick={(): void => history.go(-1)}>\r\n            返回报告\r\n          </Button>\r\n        </ButtonBoxInner>\r\n      </ButtonBox>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Parsing;\r\n"],"sourceRoot":""}