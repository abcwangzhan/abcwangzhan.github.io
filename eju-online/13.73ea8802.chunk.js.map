{"version":3,"sources":["pages/Library/Topic/Topic.tsx"],"names":["Topic","openModal","answerSheet","openResult","resultSheet","useState","answerMap","setAnswerMap","history","useHistory","type","color","onClick","go","dots","style","height","className","map","item","key","label","changeAnswer","value","newAnswer","handleEditor"],"mappings":"mSAuFeA,EAnES,WACtB,IAAQC,EAAcC,cAAdD,UACWE,EAAeC,cAA1BH,UACR,EAAkCI,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,cAUhB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBACEC,KAAK,QACLC,MAAM,UACNC,QAAS,kBAAYJ,EAAQK,IAAI,MAEnC,kBAAC,IAAD,eAEF,kBAAC,IAAD,KACE,uBAAUC,MAAM,EAAOC,MAAO,CAAEC,OAAQ,SACtC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,UAAU,SACnB,kBAAC,IAAD,qCACA,kBAAC,IAAD,aAEF,kBAAC,IAAD,+FAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,qBAtBK,CAAC,KAAM,MAAO,KAAM,MAAO,MAuBtBC,KAAI,SAACC,GAAD,OACZ,kBAAC,IAAD,CAAUC,IAAKD,GACb,8BAAOA,GACP,kBAAC,IAAD,KACE,8BAAOb,EAAUa,IACjB,kBAAC,IAAD,CACEP,QAAS,kBACPX,EAAU,CACRoB,MAAOF,EACPG,aAAc,SAACC,GAAD,OAvCjB,SAACb,EAAca,GAClC,IAAMC,EAAS,2BACVlB,GADU,kBAEZI,EAAOa,IAEVhB,EAAaiB,GAkCkCC,CAAaN,EAAMI,kBAWhE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAQb,KAAK,UAAUE,QAAS,kBAAMT,EAAW,CAAEO,KAAM,YAAzD","file":"13.73ea8802.chunk.js","sourcesContent":["import { Icon, Carousel, Button } from 'antd-mobile';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport answerSheet from './answerSheet';\nimport resultSheet from './resultSheet';\nimport {\n  Page,\n  HeaderBox,\n  GrayFont,\n  FontContent,\n  CarouselItem,\n  CarouseBox,\n  ButtonBox,\n  ButtonBoxInner,\n  CardBox,\n  CardItem,\n  EditorFont,\n  EditorIcon,\n} from '../styles';\n\nconst Topic: React.FC = () => {\n  const { openModal } = answerSheet();\n  const { openModal: openResult } = resultSheet();\n  const [answerMap, setAnswerMap] = useState({});\n  const history = useHistory();\n\n  const handleEditor = (type: string, value: string): void => {\n    const newAnswer = {\n      ...answerMap,\n      [type]: value,\n    };\n    setAnswerMap(newAnswer);\n  };\n  const labelArr = ['AB', 'CDE', 'FG', 'HIJ', 'MN'];\n  return (\n    <Page>\n      <HeaderBox>\n        <Icon\n          type=\"cross\"\n          color=\"#262626\"\n          onClick={(): void => history.go(-1)}\n        />\n        <GrayFont>00:18</GrayFont>\n      </HeaderBox>\n      <CarouseBox>\n        <Carousel dots={false} style={{ height: '100%' }}>\n          <CarouselItem>\n            <HeaderBox className=\"lr-pd\">\n              <GrayFont>1.1 微分系数</GrayFont>\n              <GrayFont>1/5</GrayFont>\n            </HeaderBox>\n            <FontContent>\n              XXXXXXXXXXXXXABXXXXXXXXXXXXXXXXXHIJXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX（）。\n            </FontContent>\n            <CardBox>\n              <CardItem>解答</CardItem>\n              {labelArr.map((item) => (\n                <CardItem key={item}>\n                  <span>{item}</span>\n                  <EditorFont>\n                    <span>{answerMap[item as keyof typeof answerMap]}</span>\n                    <EditorIcon\n                      onClick={(): void =>\n                        openModal({\n                          label: item,\n                          changeAnswer: (value) => handleEditor(item, value),\n                        })\n                      }\n                    />\n                  </EditorFont>\n                </CardItem>\n              ))}\n            </CardBox>\n          </CarouselItem>\n        </Carousel>\n      </CarouseBox>\n      <ButtonBox>\n        <ButtonBoxInner>\n          <Button type=\"primary\" onClick={() => openResult({ type: 'topic' })}>\n            提交并查看结果\n          </Button>\n        </ButtonBoxInner>\n      </ButtonBox>\n    </Page>\n  );\n};\n\nexport default Topic;\n"],"sourceRoot":""}