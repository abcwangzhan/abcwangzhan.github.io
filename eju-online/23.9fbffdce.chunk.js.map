{"version":3,"sources":["pages/UserCenter/Record/styles.ts","pages/UserCenter/Record/Record.tsx"],"names":["themeColor","theme","Page","styled","div","Info","InfoItem","InfoItemTop","InfoItemBottom","SelectBox","SelectBoxItem","ListBox","DateTitle","ListItem","ListItemLeft","ListItemRight","ListItemTags","span","Record","button","useState","Date","month","setMonth","value","label","subjectArr","setSubjectArr","subjectValue","setSubjectValue","moudleType","setMoudleType","subjectData","useQuery","QUERY_SUBJECT","variables","sourceType","data","TOTAL_HISTORY","useLazyQuery","GET_HISTORY","getHistory","getHistoryByFilters","getTotalHistory","accuracy","questionAmount","trainingTime","dateTitleRef","useRef","useEffect","typeSubjects","stringArrToPickArr","subjectEnum","prevMonth","getFullYear","getMonth","subject","moduleType","time","toFixed","format","mode","onChange","val","timeChange","PickItem","placeholder","year","formatDate","cols","onOk","moudleArr","map","item","_id","timeInterval","points","accuracyItem","title","dateTitle","timer","timerDate","Number","getDate","getDateStr","timestamp","isShowDate","current","key","className","getExamTitle","reduce","total","num"],"mappings":"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","file":"23.9fbffdce.chunk.js","sourcesContent":["import styled from 'styled-px2vw';\r\nimport pkg from '../../../../package.json';\r\n\r\nconst themeColor = pkg.theme['brand-primary'];\r\nexport const Page = styled.div``;\r\n\r\nexport const Info = styled.div`\r\n  height: 266px;\r\n  border-radius: 0px 0px 30px 30px;\r\n  background-color: ${themeColor};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n\r\nexport const InfoItem = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  color: #fff;\r\n  text-align: center;\r\n`;\r\nexport const InfoItemTop = styled.div`\r\n  font-size: 28px;\r\n`;\r\nexport const InfoItemBottom = styled.div`\r\n  margin-top: 46px;\r\n  font-size: 40px;\r\n`;\r\n\r\nexport const SelectBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 52px 30px 52px 0;\r\n`;\r\nexport const SelectBoxItem = styled.div`\r\n  width: 230px;\r\n  &:first-child {\r\n    width: 250px;\r\n  }\r\n`;\r\nexport const ListBox = styled.div`\r\n  padding: 0 30px 52px;\r\n`;\r\nexport const DateTitle = styled.div`\r\n  padding-bottom: 32px;\r\n  color: #bfbfbf;\r\n  font-size: 32px;\r\n`;\r\nexport const ListItem = styled.div`\r\n  border: ${'1PX'} solid #e8e8e8;\r\n  border-radius: 16px;\r\n  padding: 32px 30px;\r\n  background: #fafafa;\r\n  margin-bottom: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #262626;\r\n  font-size: 28px;\r\n  .bottom,\r\n  .top {\r\n    height: 48px;\r\n    display: inline-flex;\r\n    align-items: center;\r\n  }\r\n  .bottom {\r\n    margin-top: 16px;\r\n  }\r\n`;\r\n\r\nexport const ListItemLeft = styled.div`\r\n  width: 400px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  .top {\r\n    font-size: 32px;\r\n  }\r\n  .bottom {\r\n    font-size: 22px;\r\n    color: #bfbfbf;\r\n  }\r\n`;\r\n\r\nexport const ListItemRight = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ListItemTags = styled.span`\r\n  width: 50px;\r\n  height: 32px;\r\n  font-size: 18px;\r\n  background-color: #fff;\r\n  color: ${themeColor};\r\n  line-height: 32px;\r\n  margin-right: 50px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 162px;\r\n  height: 66px;\r\n  background-color: ${themeColor};\r\n  border-radius: 16px;\r\n  color: #fff;\r\n  font-size: 32px;\r\n  border: none;\r\n`;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PickItem from '@/components/PickItem';\r\nimport { useLazyQuery, useQuery } from '@apollo/client';\r\nimport { Picker, DatePicker } from 'antd-mobile';\r\nimport { GET_HISTORY, QUERY_SUBJECT, TOTAL_HISTORY } from '@/helpers/APIHelper';\r\nimport stringArrToPickArr from '@/pages/Library/utils/stringArrToPickArr';\r\nimport { moudleArr, subjectEnum } from '@/constants/globalDatas';\r\nimport {\r\n  DateTitle,\r\n  Info,\r\n  InfoItem,\r\n  InfoItemBottom,\r\n  InfoItemTop,\r\n  ListBox,\r\n  ListItem,\r\n  ListItemLeft,\r\n  ListItemRight,\r\n  ListItemTags,\r\n  Page,\r\n  SelectBox,\r\n  SelectBoxItem,\r\n} from './styles';\r\n\r\ninterface HistoryItemProps {\r\n  _id: string;\r\n  subject: string;\r\n  timeInterval: number;\r\n  points: number[];\r\n  accuracy: number;\r\n  title: string;\r\n  timestamp: number;\r\n  sourceType: string;\r\n}\r\n\r\nconst Record: React.FC = () => {\r\n  const [month, setMonth] = useState(new Date());\r\n  const [subjectArr, setSubjectArr] = useState([{ value: '', label: '' }]); // 科目数组\r\n  const [subjectValue, setSubjectValue] = useState(['maths1']); // 科目选择的值\r\n  const [moudleType, setMoudleType] = useState(['0']); // 设置模块\r\n  const { data: subjectData } = useQuery(QUERY_SUBJECT, {\r\n    variables: { sourceType: 'center' },\r\n  }); // 查询该科目下所有题目\r\n  const { data = {} } = useQuery(TOTAL_HISTORY);\r\n  const [getHistory, { data: listData }] = useLazyQuery(GET_HISTORY);\r\n  const { getHistoryByFilters } = listData || {};\r\n  const { getTotalHistory } = data;\r\n  const {\r\n    accuracy = 0,\r\n    questionAmount = 0,\r\n    trainingTime = 0,\r\n  } = getTotalHistory || {};\r\n\r\n  const dateTitleRef = useRef('');\r\n  const formatDate = (): string => {\r\n    const year = month.getFullYear();\r\n    const prevMonth = month.getMonth() + 1;\r\n    return `${year}-${prevMonth}`;\r\n  };\r\n  const timeChange = (val: Date): void => {\r\n    setMonth(val);\r\n  };\r\n  // 根据时间戳获取年月日\r\n  const getDateStr = (timer: number): string => {\r\n    const timerDate = new Date(Number(timer));\r\n    console.log('timerDate+++', timerDate, timer);\r\n    return `${timerDate.getFullYear()}/${\r\n      timerDate.getMonth() + 1\r\n    }/${timerDate.getDate()}`;\r\n  };\r\n  const getExamTitle = (item: HistoryItemProps): string => {\r\n    const { sourceType, subject, timestamp } = item;\r\n    const timerDate = new Date(Number(timestamp));\r\n\r\n    return `${sourceType}${timerDate.getFullYear()}年${\r\n      timerDate.getMonth() + 1\r\n    }月${subject}`;\r\n  };\r\n  // 设置下拉选项\r\n  useEffect(() => {\r\n    const { typeSubjects } = subjectData || {};\r\n    if (typeSubjects) {\r\n      setSubjectArr(stringArrToPickArr(typeSubjects, subjectEnum));\r\n    }\r\n  }, [subjectData]);\r\n  // 修改下拉框刷新数据\r\n  useEffect(() => {\r\n    const prevMonth = `${month.getFullYear()}-${month.getMonth() + 1}`;\r\n\r\n    getHistory({\r\n      variables: {\r\n        subject: subjectValue[0],\r\n        moduleType: moudleType[0],\r\n        time: prevMonth,\r\n      },\r\n    });\r\n  }, [month, subjectValue, moudleType, getHistory]);\r\n  return (\r\n    <Page>\r\n      <Info>\r\n        <InfoItem>\r\n          <InfoItemTop>练习时长</InfoItemTop>\r\n          <InfoItemBottom>{trainingTime}分钟 </InfoItemBottom>\r\n        </InfoItem>\r\n        <InfoItem>\r\n          <InfoItemTop>共答题数</InfoItemTop>\r\n          <InfoItemBottom>{questionAmount}道</InfoItemBottom>\r\n        </InfoItem>\r\n        <InfoItem>\r\n          <InfoItemTop>平均正确率</InfoItemTop>\r\n          <InfoItemBottom>{(accuracy * 100).toFixed(2)}%</InfoItemBottom>\r\n        </InfoItem>\r\n      </Info>\r\n      <SelectBox>\r\n        <SelectBoxItem>\r\n          <DatePicker\r\n            format=\"YYYY-MM\"\r\n            mode=\"month\"\r\n            onChange={(val): void => timeChange(val)}\r\n            value={month}\r\n          >\r\n            <PickItem placeholder=\"时间\" value={formatDate()} />\r\n          </DatePicker>\r\n        </SelectBoxItem>\r\n        <SelectBoxItem>\r\n          <Picker\r\n            data={subjectArr}\r\n            cols={1}\r\n            value={subjectValue}\r\n            onOk={(value: string[]): void => setSubjectValue(value)}\r\n          >\r\n            <PickItem placeholder=\"科目\" />\r\n          </Picker>\r\n        </SelectBoxItem>\r\n        <SelectBoxItem>\r\n          <Picker\r\n            data={moudleArr}\r\n            cols={1}\r\n            value={moudleType}\r\n            onOk={(value: string[]): void => setMoudleType(value)}\r\n          >\r\n            <PickItem placeholder=\"模块\" />\r\n          </Picker>\r\n        </SelectBoxItem>\r\n      </SelectBox>\r\n      <ListBox>\r\n        {getHistoryByFilters?.map((item: HistoryItemProps) => {\r\n          const {\r\n            _id,\r\n            subject,\r\n            timeInterval,\r\n            points,\r\n            accuracy: accuracyItem,\r\n            title,\r\n            timestamp,\r\n          } = item;\r\n          const dateTitle = getDateStr(timestamp);\r\n          let isShowDate = false;\r\n          // 判断时间与上一条改变则改变日期展示\r\n          if (dateTitle !== dateTitleRef.current) {\r\n            isShowDate = true;\r\n            dateTitleRef.current = dateTitle;\r\n          }\r\n          return (\r\n            <div key={_id}>\r\n              {isShowDate && <DateTitle>{dateTitle}</DateTitle>}\r\n              <ListItem>\r\n                <ListItemLeft>\r\n                  <div className=\"top\">\r\n                    <ListItemTags>{subject}</ListItemTags>\r\n                    {moudleType[0] === '2' ? getExamTitle(item) : title}\r\n                  </div>\r\n                  <div className=\"bottom\">用时：{timeInterval}分钟</div>\r\n                </ListItemLeft>\r\n                <ListItemRight>\r\n                  <div className=\"top\">\r\n                    正确率：{(accuracyItem * 100).toFixed(2)}%\r\n                  </div>\r\n                  <div className=\"bottom\">\r\n                    得分：{points.reduce((total, num) => total + num)}\r\n                  </div>\r\n                </ListItemRight>\r\n              </ListItem>\r\n            </div>\r\n          );\r\n        })}\r\n      </ListBox>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Record;\r\n"],"sourceRoot":""}