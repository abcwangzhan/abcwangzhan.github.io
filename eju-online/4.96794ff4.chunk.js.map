{"version":3,"sources":["pages/TsNew/fireworks.ts","pages/TsNew/TsNew.tsx"],"names":["fireworks","opts","Error","x","y","colors","count","bubbleCount","parentNode","document","body","particles","ratio","window","devicePixelRatio","cvs","createElement","ctx","getContext","style","position","left","top","pointerEvents","width","height","zIndex","appendChild","i","push","radius","randomRange","color","Math","floor","random","length","rotation","speed","friction","opacity","yVel","gravity","render","setTimeout","removeChild","requestAnimationFrame","clearRect","forEach","p","cos","PI","sin","beginPath","globalAlpha","fillStyle","arc","fill","a","b","c","parseFloat","toFixed","TsNew","domRef","useRef","useState","foo","setFoo","value1","setValue1","value2","setValue2","useEffect","baz","bar","undefined","Array","map","innerWidth","Wrapper","JSON","stringify","ref","type","onClick","current","classList","toggle","confirm","prompt","styled","div"],"mappings":"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","file":"4.96794ff4.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\r\n/* eslint-disable func-names */\r\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nexport type FireworksInput = {\r\n  x: number;\r\n  y: number;\r\n  count?: number;\r\n  colors?: string[];\r\n  parentNode?: HTMLElement;\r\n};\r\n\r\nexport type Particle = {\r\n  x: number;\r\n  y: number;\r\n  yVel: number;\r\n  speed: number;\r\n  radius: number;\r\n  opacity: number;\r\n  gravity: number;\r\n  rotation: number;\r\n  friction: number;\r\n  color: string;\r\n};\r\n\r\nfunction fireworks(opts: FireworksInput): void {\r\n  if (!opts) {\r\n    throw new Error('Missing options for fireworks');\r\n  }\r\n\r\n  const {\r\n    x,\r\n    y,\r\n    colors = [],\r\n    count: bubbleCount = 25,\r\n    parentNode = document.body,\r\n  } = opts;\r\n\r\n  const particles = [];\r\n  const ratio = window.devicePixelRatio;\r\n  const cvs = document.createElement('canvas');\r\n  const ctx = cvs.getContext('2d');\r\n\r\n  if (!ctx) {\r\n    console.log(`fireworks: unable to get 2d canvas context`);\r\n    return;\r\n  }\r\n\r\n  cvs.style.position = 'absolute';\r\n  cvs.style.left = `${x - 150}px`;\r\n  cvs.style.top = `${y - 150}px`;\r\n  cvs.style.pointerEvents = 'none';\r\n  cvs.style.width = `${300}px`;\r\n  cvs.style.height = `${300}px`;\r\n  cvs.style.zIndex = '100';\r\n  cvs.width = 300 * ratio;\r\n  cvs.height = 300 * ratio;\r\n  parentNode.appendChild(cvs);\r\n\r\n  for (let i = 0; i < bubbleCount; i += 1) {\r\n    particles.push({\r\n      x: cvs.width / 2,\r\n      y: cvs.height / 2,\r\n      radius: randomRange(10, 25),\r\n      color: colors[Math.floor(Math.random() * colors.length)],\r\n      rotation: randomRange(0, 360, -1),\r\n      speed: randomRange(6, 10),\r\n      friction: 0.96,\r\n      opacity: randomRange(0, 0.5, -1),\r\n      yVel: 0,\r\n      gravity: 0.05,\r\n    });\r\n  }\r\n\r\n  render(cvs.width, cvs.height, particles, ctx);\r\n\r\n  setTimeout(function () {\r\n    parentNode.removeChild(cvs);\r\n  }, 1000);\r\n}\r\n\r\nfunction render(\r\n  width: number,\r\n  height: number,\r\n  particles: Particle[],\r\n  ctx: CanvasRenderingContext2D\r\n) {\r\n  requestAnimationFrame(() => {\r\n    render(width, height, particles, ctx);\r\n  });\r\n\r\n  ctx.clearRect(0, 0, width, height);\r\n  particles.forEach(function (p: Particle, i: number) {\r\n    p.x += p.speed * Math.cos((p.rotation * Math.PI) / 180);\r\n    p.y += p.speed * Math.sin((p.rotation * Math.PI) / 180);\r\n    p.opacity -= 0.005;\r\n    p.speed *= p.friction;\r\n    p.radius *= p.friction;\r\n    p.yVel += p.gravity;\r\n    p.y += p.yVel;\r\n\r\n    if (p.opacity < 0 || p.radius < 0) {\r\n      return;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    ctx.globalAlpha = p.opacity;\r\n    ctx.fillStyle = p.color;\r\n    ctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n  });\r\n\r\n  return ctx;\r\n}\r\n\r\nfunction randomRange(a: number, b: number, c = 0) {\r\n  return parseFloat(\r\n    (Math.random() * ((a || 1) - (b || 0)) + (b || 0)).toFixed(c > 0 ? c : 0)\r\n  );\r\n}\r\nexport default fireworks;\r\n\r\nexport function fire(): void {\r\n  Array(6)\r\n    .fill(null)\r\n    .map(() =>\r\n      fireworks({\r\n        x: (Math.random() * window.innerWidth) / 2 + window.innerWidth / 4,\r\n        y: (Math.random() * window.innerWidth) / 2 + window.innerWidth / 4,\r\n        colors: ['#cc3333', '#4CAF50', '#81C784'],\r\n      })\r\n    );\r\n}\r\n","/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable no-alert */\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-px2vw';\nimport { fire } from './fireworks';\n\ntype FooType = {\n  bar?: {\n    baz?: string | null;\n  } | null;\n} | null;\n\nconst TsNew: React.FC = () => {\n  const domRef = useRef<HTMLSelectElement | null>(null);\n  const [foo, setFoo] = useState<FooType>(null);\n  const [value1, setValue1] = useState<string | null>(null);\n  const [value2, setValue2] = useState<FooType | string | null>(null);\n\n  useEffect(() => {\n    const baz = foo?.bar?.baz;\n    setValue1(baz === undefined ? 'undefined' : baz);\n    setValue2(foo ?? 'when foo is null or undefined');\n    if (foo?.bar?.baz) {\n      fire();\n    }\n  }, [foo]);\n\n  return (\n    <Wrapper>\n      <code>\n        <pre>foo当前值：{JSON.stringify(foo, null, 2)}</pre>\n      </code>\n      <section>\n        <h1>测试可选链</h1>\n        <h2>value1的值：{value1}</h2>\n        <code>\n          <pre>value1 = foo?.bar?.baz;</pre>\n          <pre>\n            相当于：value1 = foo ? (foo.bar ? foo.bar.baz : undefined) :\n            undefined\n          </pre>\n        </code>\n      </section>\n      <section ref={domRef}>\n        <h1>测试可选调用</h1>\n        <code>domRef.current?.classList.toggle('active');</code>\n        <button\n          type=\"button\"\n          onClick={(): void => {\n            domRef.current?.classList.toggle('active');\n          }}\n        >\n          do it\n        </button>\n      </section>\n      <section>\n        <h1>测试空值联合</h1>\n        <h2>\n          value2的值：\n          {typeof value2 === 'object'\n            ? JSON.stringify(value2, null, 2)\n            : value2}\n        </h2>\n        <code>\n          <pre>value1 = foo ?? 'when foo is null or undefined';</pre>\n          <pre>\n            相当于：value1 = (foo !== null && foo !== undefined) ? foo : 'when\n            foo is null or undefined'\n          </pre>\n        </code>\n      </section>\n      <button\n        type=\"button\"\n        onClick={(): void => {\n          if (window.confirm('是否要给foo增加bar属性？')) {\n            if (window.confirm('是否要给foo.bar增加baz属性？')) {\n              setFoo({\n                bar: {\n                  baz: window.prompt('输入bar的属性baz的值'),\n                },\n              });\n            } else {\n              setFoo({\n                bar: {},\n              });\n            }\n          } else {\n            setFoo({});\n          }\n        }}\n      >\n        点击修改foo的值\n      </button>\n    </Wrapper>\n  );\n};\n\nexport default TsNew;\n\nconst Wrapper = styled.div`\n  padding: 2vw;\n  section {\n    padding: 2vw;\n    line-height: 2;\n    border: ${'1PX'} dotted #666;\n    margin: 2vw 0;\n    &.active {\n      background-color: pink;\n    }\n    h1 {\n      color: orange;\n    }\n  }\n  button {\n    padding: 2vw;\n    background-color: orange;\n    color: #fff;\n    margin: 3vw;\n  }\n`;\n"],"sourceRoot":""}