{"version":3,"sources":["pages/Library/Topic/Result/Result.tsx"],"names":["Result","history","useHistory","tag","getUrlParams","state","useContext","ProviderContext","topic","topicSelectAnswer","totalAnswer","trueAnswer","forEach","questionItem","questionItemidx","checkAnswers","letterTemp","letterStr","split","answerItem","answerLabel","splice","length","join","selectQuestion","selectAnswer","preAnswerItem","preAnswerItemIdx","selectAnswerArr","answer","toFixed","getPercenter","type","inline","onClick","push","go"],"mappings":"8NAkFeA,EAjEU,WACvB,IAAMC,EAAUC,cACRC,EAAQC,cAARD,IACAE,EAAUC,qBAAWC,KAArBF,MAER,EAA+CA,EAAvCG,aAAR,MAAgB,GAAhB,IAA+CH,EAA3BI,yBAApB,MAAwC,GAAxC,EA8BA,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iCACA,kBAAC,IAAD,KACE,kBAAC,IAAD,2BACA,kBAAC,IAAD,KAlCa,WACnB,IAAIC,EAAc,EACdC,EAAa,EAwBjB,OAvBAH,EAAMI,SAAQ,SAACC,EAAcC,GAE3B,IAAQC,EAAiBF,EAAjBE,aACFC,EAAaC,IAAUC,MAAM,IACnCH,EAAaH,SAAQ,SAACO,GAGpB,IAAMC,EAAcJ,EAAWK,OAAO,EAAGF,EAAWG,QAAQC,KAAK,IAC3DC,EACJf,EACGK,EAAkB,GAEjBW,EAAY,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAiBJ,GACtCD,EAAWP,SAAQ,SAACc,EAAeC,GACjCjB,GAAe,EAEf,IAAMkB,EAAe,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAcP,MAAM,KACzB,OAAfU,QAAe,IAAfA,OAAA,EAAAA,EAAkBD,MAAsBD,EAAcG,SACxDlB,GAAc,aAKbA,EAAaD,EAAe,KAAKoB,QAAQ,GAQ9BC,GAAd,MAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAe5B,GACf,kBAAC,IAAD,kCAIJ,kBAAC,IAAD,KACE,uBACE6B,KAAK,UACLC,QAAM,EACNC,QAAS,kBAAYjC,EAAQkC,KAAR,6BAAmChC,MAH1D,4BAOA,uBAAQ6B,KAAK,UAAUC,QAAM,EAACC,QAAS,kBAAYjC,EAAQmC,IAAI,KAA/D","file":"11.b02a60a2.chunk.js","sourcesContent":["import { letterStr } from '@/constants/globalDatas';\r\nimport { ProviderContext } from '@/reducer/context';\r\nimport getUrlParams from '@/utils/get-url-params';\r\nimport { Button } from 'antd-mobile';\r\nimport React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  ResultBg,\r\n  ResultButtonBox,\r\n  ResultTitle,\r\n  TrueBox,\r\n  TrueDesc,\r\n  TrueDescItem,\r\n  TruePercent,\r\n  TrueTitle,\r\n} from '../../styles';\r\n\r\nconst Result: React.FC = () => {\r\n  const history = useHistory();\r\n  const { tag } = getUrlParams();\r\n  const { state } = useContext(ProviderContext);\r\n\r\n  const { topic = [], topicSelectAnswer = {} } = state;\r\n  // 获取获得得分数\r\n  const getPercenter = (): string => {\r\n    let totalAnswer = 0;\r\n    let trueAnswer = 0;\r\n    topic.forEach((questionItem, questionItemidx) => {\r\n      // 遍历有几道题\r\n      const { checkAnswers } = questionItem;\r\n      const letterTemp = letterStr.split('');\r\n      checkAnswers.forEach((answerItem) => {\r\n        // 遍历有几个答案项\r\n        // 获得当前答案得label\r\n        const answerLabel = letterTemp.splice(0, answerItem.length).join('');\r\n        const selectQuestion =\r\n          topicSelectAnswer[\r\n            (questionItemidx + 1) as keyof typeof topicSelectAnswer\r\n          ]; // 获得选择得第几题\r\n        const selectAnswer = selectQuestion?.[answerLabel]; // 获得对应选择得答案\r\n        answerItem.forEach((preAnswerItem, preAnswerItemIdx) => {\r\n          totalAnswer += 1;\r\n          // 遍历每个答案项有并列几个答案\r\n          const selectAnswerArr = selectAnswer?.split(''); // 获取选择答案得数组\r\n          if (selectAnswerArr?.[preAnswerItemIdx] === preAnswerItem.answer) {\r\n            trueAnswer += 1;\r\n          }\r\n        });\r\n      });\r\n    });\r\n    return ((trueAnswer / totalAnswer) * 100).toFixed(2);\r\n  };\r\n  return (\r\n    <>\r\n      <ResultBg>\r\n        <ResultTitle>练习报告</ResultTitle>\r\n        <TrueBox>\r\n          <TrueTitle>正确率</TrueTitle>\r\n          <TruePercent>{getPercenter()}%</TruePercent>\r\n        </TrueBox>\r\n        <TrueDesc>\r\n          <TrueDescItem>{tag}</TrueDescItem>\r\n          <TrueDescItem>用时 08：18</TrueDescItem>\r\n        </TrueDesc>\r\n      </ResultBg>\r\n\r\n      <ResultButtonBox>\r\n        <Button\r\n          type=\"primary\"\r\n          inline\r\n          onClick={(): void => history.push(`/topic-parsing?tag=${tag}`)}\r\n        >\r\n          查看解析\r\n        </Button>\r\n        <Button type=\"primary\" inline onClick={(): void => history.go(-2)}>\r\n          继续练习\r\n        </Button>\r\n      </ResultButtonBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"sourceRoot":""}