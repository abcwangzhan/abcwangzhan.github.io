{"version":3,"sources":["pages/Library/Quick/Result/Result.tsx"],"names":["Result","history","useHistory","tag","getUrlParams","state","useContext","ProviderContext","quickTrueAnswer","selectAnswer","getTruePercent","tureNum","questionNum","length","answerElArr","forEach","item","index","answer","push","className","percent","toFixed","type","inline","onClick","go"],"mappings":"gOAmFeA,EAjEU,WACvB,IAAMC,EAAUC,cACRC,EAAQC,cAARD,IACAE,EAAUC,qBAAWC,KAArBF,MAEAG,EAAuCH,EAAvCG,gBAAR,EAA+CH,EAAtBI,oBAAzB,MAAwC,GAAxC,EAEMC,EAAiB,WAIrB,IAAIC,EAAU,EACRC,GAA6B,OAAfJ,QAAe,IAAfA,OAAA,EAAAA,EAAiBK,SAAU,EACzCC,EAA6B,GAenC,OAde,OAAfN,QAAe,IAAfA,KAAiBO,SAAQ,SAACC,EAAMC,GAC1BD,EAAKE,SAAWT,EAAaQ,IAC/BN,GAAW,EACXG,EAAYK,KACV,kBAAC,IAAD,CAAgBC,UAAU,QAAQH,EAAQ,KAG5CH,EAAYK,KACV,kBAAC,IAAD,CAAgBC,UAAU,SAASH,EAAQ,OAM1C,CACLI,QAFgB,IAAhBT,GAAsBD,EAAUC,EAAe,KAAKU,QAAQ,GAAK,IAGjER,gBAGJ,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iCACA,kBAAC,IAAD,KACE,kBAAC,IAAD,2BACA,kBAAC,IAAD,KAAcJ,IAAiBW,QAA/B,MAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAelB,GACf,kBAAC,IAAD,kCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAaO,IAAiBI,cAEhC,kBAAC,IAAD,KACE,uBACES,KAAK,UACLC,QAAM,EACNC,QAAS,kBAAYxB,EAAQkB,KAAR,6BAAmChB,MAH1D,4BAOA,uBAAQoB,KAAK,UAAUC,QAAM,EAACC,QAAS,kBAAYxB,EAAQyB,IAAI,KAA/D","file":"8.7fec1f65.chunk.js","sourcesContent":["import { ProviderContext } from '@/reducer/context';\r\nimport getUrlParams from '@/utils/get-url-params';\r\nimport { Button } from 'antd-mobile';\r\nimport React, { ReactElement, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  AnswerResultList,\r\n  ResultBg,\r\n  ResultButtonBox,\r\n  ResultTitle,\r\n  TrueBox,\r\n  TrueDesc,\r\n  TrueDescItem,\r\n  TruePercent,\r\n  TrueTitle,\r\n} from '../../styles';\r\nimport { AnswerList, AnswerListItem } from '../styles';\r\n\r\nconst Result: React.FC = () => {\r\n  const history = useHistory();\r\n  const { tag } = getUrlParams();\r\n  const { state } = useContext(ProviderContext);\r\n  console.log('state++++', state);\r\n  const { quickTrueAnswer, selectAnswer = {} } = state;\r\n  // 获取答案正确率\r\n  const getTruePercent = (): {\r\n    percent: string;\r\n    answerElArr: ReactElement[];\r\n  } => {\r\n    let tureNum = 0; // 正确数\r\n    const questionNum = quickTrueAnswer?.length || 0; // 题数\r\n    const answerElArr: JSX.Element[] = []; // 答案\r\n    quickTrueAnswer?.forEach((item, index) => {\r\n      if (item.answer === selectAnswer[index as keyof typeof selectAnswer]) {\r\n        tureNum += 1;\r\n        answerElArr.push(\r\n          <AnswerListItem className=\"true\">{index + 1}</AnswerListItem>\r\n        );\r\n      } else {\r\n        answerElArr.push(\r\n          <AnswerListItem className=\"error\">{index + 1}</AnswerListItem>\r\n        );\r\n      }\r\n    });\r\n    const percent =\r\n      questionNum !== 0 ? ((tureNum / questionNum) * 100).toFixed(2) : '0';\r\n    return {\r\n      percent,\r\n      answerElArr,\r\n    };\r\n  };\r\n  return (\r\n    <>\r\n      <ResultBg>\r\n        <ResultTitle>练习报告</ResultTitle>\r\n        <TrueBox>\r\n          <TrueTitle>正确率</TrueTitle>\r\n          <TruePercent>{getTruePercent().percent}%</TruePercent>\r\n        </TrueBox>\r\n        <TrueDesc>\r\n          <TrueDescItem>{tag}</TrueDescItem>\r\n          <TrueDescItem>用时 08：18</TrueDescItem>\r\n        </TrueDesc>\r\n      </ResultBg>\r\n      <AnswerResultList>\r\n        <AnswerList>{getTruePercent().answerElArr}</AnswerList>\r\n      </AnswerResultList>\r\n      <ResultButtonBox>\r\n        <Button\r\n          type=\"primary\"\r\n          inline\r\n          onClick={(): void => history.push(`/quick-parsing?tag=${tag}`)}\r\n        >\r\n          查看解析\r\n        </Button>\r\n        <Button type=\"primary\" inline onClick={(): void => history.go(-1)}>\r\n          继续练习\r\n        </Button>\r\n      </ResultButtonBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"sourceRoot":""}