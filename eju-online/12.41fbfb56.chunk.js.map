{"version":3,"sources":["pages/Library/Topic/Topic.tsx"],"names":["Topic","openModal","answerSheet","openResult","resultSheet","useState","answerMap","setAnswerMap","selectIndex","setSelectIndex","dispatch","useContext","ProviderContext","getUrlParams","subject","tagId","tag","topicQuestions","useQuery","TOPIC_QUESTION","variables","data","history","useHistory","useEffect","type","topic","color","onClick","go","length","dots","style","height","afterChange","current","selectedIndex","map","topicItem","index","questionId","question","checkAnswers","letterTemp","letterStr","split","preAnswer","className","item","itemLabel","splice","join","key","label","changeAnswer","value","questionNum","cuttent","handleEditor","topicSelectAnswer","selectAnswer"],"mappings":"+UAsKeA,EA5IS,WACtB,IAAQC,EAAcC,cAAdD,UACWE,EAAeC,cAA1BH,UACR,EAAkCI,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACQC,EAAaC,qBAAWC,KAAxBF,SACR,EAAgCG,cAAxBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,IAKhBC,GAHSC,YAASC,IAAgB,CACxCC,UAAW,CAAEN,UAASC,WADhBM,MAG2B,IAA3BJ,eAEFK,EAAUC,cAuChB,OAPAC,qBAAU,WAEA,OAARd,QAAQ,IAARA,KAAW,CACTe,KAAM,WACNC,MAAOT,MAER,CAACP,EAAUO,IAEZ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBACEQ,KAAK,QACLE,MAAM,UACNC,QAAS,kBAAYN,EAAQO,IAAI,MAEnC,kBAAC,IAAD,eAEDZ,GAAkBA,EAAea,OAAS,GACzC,kBAAC,IAAD,KACE,uBACEC,MAAM,EACNC,MAAO,CAAEC,OAAQ,QACjBC,YAAa,SAACC,GAAD,OAA2B1B,EAAe0B,IACvDC,cAAe5B,GAJjB,OAMGS,QANH,IAMGA,OANH,EAMGA,EAAgBoB,KACf,SAACC,EAA6BC,GAC5B,IAAQC,EAAuCF,EAAvCE,WAAYC,EAA2BH,EAA3BG,SAAUC,EAAiBJ,EAAjBI,aACxBC,EAAaC,IAAUC,MAAM,IAE7BC,EACJxC,EAFciC,EAAQ,IAE0B,GAClD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWQ,UAAU,SACnB,kBAAC,IAAD,KACGP,EADH,IACgBxB,GAEhB,kBAAC,IAAD,KACGuB,EAAQ,EADX,WACetB,QADf,IACeA,OADf,EACeA,EAAgBa,SAGjC,kBAAC,IAAD,KAAcW,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,qBACCC,EAAaL,KAAI,SAACW,GAEjB,IAAMC,EAAYN,EACfO,OAAO,EAAGF,EAAKlB,QACfqB,KAAK,IACR,OACE,kBAAC,IAAD,CAAUC,IAAKH,GACb,8BAAOA,GACP,kBAAC,IAAD,KACE,8BACGH,EAAUG,IAEb,kBAAC,IAAD,CACErB,QAAS,kBACP3B,EAAU,CACRoD,MAAOJ,EACPK,aAAc,SAACC,GAAD,OA1F3B,SACnB9B,EACA8B,EACAC,GAEA,IAAMV,EACJxC,EAAUkD,IAA0C,GACtDV,EAAUrB,GAAQ8B,EAElBhD,GAAa,SAACkD,GACZ,OAAO,2BACFA,GADL,kBAEGD,EAAcV,OA+EeY,CAAaT,EAAWM,EAAOhB,EAAQ,qBAgBvE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACG/B,EAAc,KAAd,OAAoBS,QAApB,IAAoBA,OAApB,EAAoBA,EAAgBa,QACnC,uBAAQL,KAAK,UAAUG,QA7FZ,WACX,OAARlB,QAAQ,IAARA,KAAW,CAAEe,KAAM,uBAAwBkC,kBAAmBrD,IAE9DH,EAAW,CAAEsB,KAAM,QAASmC,aAActD,EAAWU,UA0F7C,8CAIA,uBAAQS,KAAK,UAAUG,QA1FJ,WAC3BnB,GAAe,SAAC0B,GAAD,OAAaA,EAAU,OAyF9B","file":"12.41fbfb56.chunk.js","sourcesContent":["import { Icon, Carousel, Button } from 'antd-mobile';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { TOPIC_QUESTION } from '@/helpers/APIHelper';\r\nimport getUrlParams from '@/utils/get-url-params';\r\nimport { ExamQuestionItem } from '@/reducer/reducer';\r\nimport { letterStr } from '@/constants/globalDatas';\r\nimport { ProviderContext } from '@/reducer/context';\r\nimport { useHistory } from 'react-router-dom';\r\nimport answerSheet from './answerSheet';\r\nimport resultSheet from './resultSheet';\r\nimport {\r\n  Page,\r\n  HeaderBox,\r\n  GrayFont,\r\n  FontContent,\r\n  CarouselItem,\r\n  CarouseBox,\r\n  ButtonBox,\r\n  ButtonBoxInner,\r\n  CardBox,\r\n  CardItem,\r\n  EditorFont,\r\n  EditorIcon,\r\n} from '../styles';\r\n\r\nconst Topic: React.FC = () => {\r\n  const { openModal } = answerSheet();\r\n  const { openModal: openResult } = resultSheet();\r\n  const [answerMap, setAnswerMap] = useState({});\r\n  const [selectIndex, setSelectIndex] = useState(0); // 选择题目项\r\n  const { dispatch } = useContext(ProviderContext);\r\n  const { subject, tagId, tag } = getUrlParams();\r\n\r\n  const { data } = useQuery(TOPIC_QUESTION, {\r\n    variables: { subject, tagId },\r\n  });\r\n  const { topicQuestions } = data || {};\r\n  console.log('topicQuestions+++++', topicQuestions);\r\n  const history = useHistory();\r\n\r\n  // 回显选中的答案\r\n  const handleEditor = (\r\n    type: string,\r\n    value: string,\r\n    questionNum: number\r\n  ): void => {\r\n    const preAnswer: { [key: string]: string } =\r\n      answerMap[questionNum as keyof typeof answerMap] || {};\r\n    preAnswer[type] = value;\r\n\r\n    setAnswerMap((cuttent) => {\r\n      return {\r\n        ...cuttent,\r\n        [questionNum]: preAnswer,\r\n      };\r\n    });\r\n  };\r\n  // 提交\r\n  const handleSubmit = (): void => {\r\n    dispatch?.({ type: 'setTopicSelectAnswer', topicSelectAnswer: answerMap });\r\n\r\n    openResult({ type: 'topic', selectAnswer: answerMap, tag });\r\n  };\r\n\r\n  // 切换题目\r\n  const handleQuestionChange = (): void => {\r\n    setSelectIndex((current) => current + 1);\r\n  };\r\n\r\n  // 缓存在state中正确答案\r\n  useEffect(() => {\r\n    console.log('useEffect++++', topicQuestions);\r\n    dispatch?.({\r\n      type: 'setTopic',\r\n      topic: topicQuestions,\r\n    });\r\n  }, [dispatch, topicQuestions]);\r\n  return (\r\n    <Page>\r\n      <HeaderBox>\r\n        <Icon\r\n          type=\"cross\"\r\n          color=\"#262626\"\r\n          onClick={(): void => history.go(-1)}\r\n        />\r\n        <GrayFont>00:18</GrayFont>\r\n      </HeaderBox>\r\n      {topicQuestions && topicQuestions.length > 0 && (\r\n        <CarouseBox>\r\n          <Carousel\r\n            dots={false}\r\n            style={{ height: '100%' }}\r\n            afterChange={(current: number): void => setSelectIndex(current)}\r\n            selectedIndex={selectIndex}\r\n          >\r\n            {topicQuestions?.map(\r\n              (topicItem: ExamQuestionItem, index: number) => {\r\n                const { questionId, question, checkAnswers } = topicItem;\r\n                const letterTemp = letterStr.split('');\r\n                const prevNum = index + 1;\r\n                const preAnswer =\r\n                  answerMap[prevNum as keyof typeof answerMap] || {};\r\n                return (\r\n                  <CarouselItem>\r\n                    <HeaderBox className=\"lr-pd\">\r\n                      <GrayFont>\r\n                        {questionId} {tag}\r\n                      </GrayFont>\r\n                      <GrayFont>\r\n                        {index + 1}/{topicQuestions?.length}\r\n                      </GrayFont>\r\n                    </HeaderBox>\r\n                    <FontContent>{question}</FontContent>\r\n                    <CardBox>\r\n                      <CardItem>解答</CardItem>\r\n                      {checkAnswers.map((item) => {\r\n                        // 获取答案label\r\n                        const itemLabel = letterTemp\r\n                          .splice(0, item.length)\r\n                          .join('');\r\n                        return (\r\n                          <CardItem key={itemLabel}>\r\n                            <span>{itemLabel}</span>\r\n                            <EditorFont>\r\n                              <span>\r\n                                {preAnswer[itemLabel as keyof typeof preAnswer]}\r\n                              </span>\r\n                              <EditorIcon\r\n                                onClick={(): void =>\r\n                                  openModal({\r\n                                    label: itemLabel,\r\n                                    changeAnswer: (value) =>\r\n                                      handleEditor(itemLabel, value, index + 1),\r\n                                  })\r\n                                }\r\n                              />\r\n                            </EditorFont>\r\n                          </CardItem>\r\n                        );\r\n                      })}\r\n                    </CardBox>\r\n                  </CarouselItem>\r\n                );\r\n              }\r\n            )}\r\n          </Carousel>\r\n        </CarouseBox>\r\n      )}\r\n      <ButtonBox>\r\n        <ButtonBoxInner>\r\n          {selectIndex + 1 === topicQuestions?.length ? (\r\n            <Button type=\"primary\" onClick={handleSubmit}>\r\n              提交并查看结果\r\n            </Button>\r\n          ) : (\r\n            <Button type=\"primary\" onClick={handleQuestionChange}>\r\n              下一题\r\n            </Button>\r\n          )}\r\n        </ButtonBoxInner>\r\n      </ButtonBox>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Topic;\r\n"],"sourceRoot":""}