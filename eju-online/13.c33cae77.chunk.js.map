{"version":3,"sources":["pages/Login/CompleteAll/CompleteAll.tsx"],"names":["Step","CompleteAll","useState","birthday","setBirthday","genderValue","setGenderValue","regionValue","setRegionValue","degreeValue","setDegreeValue","goalSchoolValue","setGoalSchoolValue","japaneseAbilityCertificateValue","setJapaneseAbilityCertificateValue","japaneseAbilityPointValue","setJapaneseAbilityPointValue","englishAbilityCertificateValue","setEnglishAbilityCertificateValue","englishAbilityPointValue","setEnglishAbilityPointValue","drawerOpen","setDraweOpen","ejuValue","setEjuValue","ejuValuePoint","setEjuValuePoint","history","useHistory","userInfo","useQuery","USER_SHOW","fetchPolicy","data","useMutation","UPDATE_USER_INFO","onCompleted","push","onError","show","updateUserInfo","handleSelectPick","value","type","date","pad","n","getFullYear","getMonth","getDate","formatDate","handleEjuPoint","points","val","size","direction","current","mode","onChange","format","PickItem","placeholder","gender","cols","onOk","district","degree","japaneseAbilityCertificate","length","Number","englishAbilityCertificate","goalSchool","onClick","inline","ejuPoint","Object","keys","forEach","item","subject","point","param","region","japaneseAbility","certificate","englishAbility","variables","userInfoInput","handleSubmit","sidebar","artScience","getUserInfo","renderHeader","totalPoint","toString","handleEjuValue","ejuContent","position","open","enableDragHandle","onOpenChange"],"mappings":"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","file":"13.c33cae77.chunk.js","sourcesContent":["import React, { ReactElement, useState } from 'react';\r\nimport {\r\n  WhiteSpace,\r\n  Picker,\r\n  Steps,\r\n  DatePicker,\r\n  Drawer,\r\n  InputItem,\r\n  List,\r\n  Toast,\r\n} from 'antd-mobile';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport PickItem from '@/components/PickItem';\r\nimport {\r\n  gender,\r\n  degree,\r\n  japaneseAbilityCertificate,\r\n  englishAbilityCertificate,\r\n  goalSchool,\r\n} from '@/constants/globalDatas';\r\nimport district from '@/constants/district.json';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { UPDATE_USER_INFO, USER_SHOW } from '@/helpers/APIHelper';\r\nimport {\r\n  Page,\r\n  PageTitle,\r\n  OthersItem,\r\n  PrimaryButton,\r\n  DrawerBox,\r\n  ButtonBox,\r\n} from '../styles';\r\n\r\nconst { Step } = Steps;\r\nconst CompleteAll: React.FC = () => {\r\n  const [birthday, setBirthday] = useState(''); // 出生日期\r\n  const [genderValue, setGenderValue] = useState<number[]>([]); // 性别\r\n  const [regionValue, setRegionValue] = useState<string[]>([]); // 国内地区\r\n  const [degreeValue, setDegreeValue] = useState<string[]>([]); // 最终学历\r\n  const [goalSchoolValue, setGoalSchoolValue] = useState<string[]>([]); // 目标院校\r\n  const [japaneseAbilityCertificateValue, setJapaneseAbilityCertificateValue] =\r\n    useState<string[]>([]); // 日语能力\r\n  const [japaneseAbilityPointValue, setJapaneseAbilityPointValue] = useState(0); // 日语成绩\r\n  const [englishAbilityCertificateValue, setEnglishAbilityCertificateValue] =\r\n    useState<string[]>([]); // 英语能力\r\n  const [englishAbilityPointValue, setEnglishAbilityPointValue] = useState(0); // 英语成绩\r\n  const [drawerOpen, setDraweOpen] = useState(false); // 是否打开最高留考成绩抽屉\r\n  const [ejuValue, setEjuValue] = useState({}); // 留考成绩展示\r\n  const [ejuValuePoint, setEjuValuePoint] = useState(''); // 留考成绩总分\r\n  const history = useHistory();\r\n  const { data: userInfo } = useQuery(USER_SHOW, {\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n  const [updateUserInfo] = useMutation(UPDATE_USER_INFO, {\r\n    onCompleted: () => history.push('/complete-show'),\r\n    onError: () => Toast.show('保存失败'),\r\n  });\r\n\r\n  // 格式化日期格式\r\n  const formatDate = (date: Date): string => {\r\n    const pad = (n: number): string | number => (n < 10 ? `0${n}` : n);\r\n    const dateStr = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(\r\n      date.getDate()\r\n    )}`;\r\n    return dateStr;\r\n  };\r\n  // 设置下拉选中的值\r\n  const handleSelectPick = (value: any, type: string): void => {\r\n    console.log(value.toString());\r\n    switch (type) {\r\n      case 'birthday':\r\n        setBirthday(formatDate(value));\r\n        break;\r\n      case 'gender':\r\n        setGenderValue(value);\r\n        break;\r\n      case 'region':\r\n        setRegionValue(value);\r\n        break;\r\n      case 'degree':\r\n        setDegreeValue(value);\r\n        break;\r\n      case 'japaneseAbilityCertificate':\r\n        setJapaneseAbilityCertificateValue(value);\r\n        break;\r\n      case 'englishAbilityCertificate':\r\n        setEnglishAbilityCertificateValue(value);\r\n        break;\r\n      case 'goalSchool':\r\n        setGoalSchoolValue(value);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  // 下一步前进行提交\r\n  const handleSubmit = (): void => {\r\n    const ejuPoint: { subject: string; point: number }[] = [];\r\n    Object.keys(ejuValue).forEach((item) => {\r\n      ejuPoint.push({\r\n        subject: item,\r\n        point: Number(ejuValue[item as keyof typeof ejuValue]),\r\n      });\r\n    });\r\n    const param = {\r\n      birthday,\r\n      gender: genderValue[0],\r\n      region: regionValue,\r\n      degree: degreeValue[0],\r\n      japaneseAbility: {\r\n        certificate: japaneseAbilityCertificateValue[0],\r\n        point: japaneseAbilityPointValue,\r\n      },\r\n      englishAbility: {\r\n        certificate: englishAbilityCertificateValue[0],\r\n        point: englishAbilityPointValue,\r\n      },\r\n      goalSchool: goalSchoolValue[0],\r\n      ejuPoint,\r\n    };\r\n    updateUserInfo({\r\n      variables: {\r\n        userInfoInput: param,\r\n      },\r\n    });\r\n  };\r\n  // 修改分数\r\n  const handleEjuPoint = (points: string, type: string): void => {\r\n    setEjuValue((val) => {\r\n      const newVal = { ...val, [type]: points };\r\n      return newVal;\r\n    });\r\n  };\r\n\r\n  // 填写留考成绩\r\n  const handleEjuValue = (): void => {\r\n    let totalPoint = 0;\r\n    Object.keys(ejuValue).forEach((item) => {\r\n      totalPoint += Number(ejuValue[item as keyof typeof ejuValue]);\r\n    });\r\n    setEjuValuePoint(totalPoint.toString());\r\n    setDraweOpen(false);\r\n  };\r\n  const ejuContent = (): ReactElement => {\r\n    console.log('userInfo+++++', userInfo);\r\n    // 0文科  1理科\r\n    const artScience = userInfo?.getUserInfo?.artScience;\r\n    return (\r\n      <DrawerBox>\r\n        <List renderHeader=\"留考最高成绩\">\r\n          {artScience === 0 && (\r\n            <>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void =>\r\n                  handleEjuPoint(val, 'japWriting')\r\n                }\r\n              >\r\n                日语写作\r\n              </InputItem>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void =>\r\n                  handleEjuPoint(val, 'japReading')\r\n                }\r\n              >\r\n                日语阅读\r\n              </InputItem>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void =>\r\n                  handleEjuPoint(val, 'japListening')\r\n                }\r\n              >\r\n                日语听力\r\n              </InputItem>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void => handleEjuPoint(val, 'math1')}\r\n              >\r\n                数学1\r\n              </InputItem>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void => handleEjuPoint(val, 'ACAT')}\r\n              >\r\n                文综\r\n              </InputItem>\r\n            </>\r\n          )}\r\n          {artScience === 1 && (\r\n            <>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void =>\r\n                  handleEjuPoint(val, 'japWriting')\r\n                }\r\n              >\r\n                日语写作\r\n              </InputItem>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void =>\r\n                  handleEjuPoint(val, 'japReading')\r\n                }\r\n              >\r\n                日语阅读\r\n              </InputItem>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void =>\r\n                  handleEjuPoint(val, 'japListening')\r\n                }\r\n              >\r\n                日语听力\r\n              </InputItem>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void => handleEjuPoint(val, 'math2')}\r\n              >\r\n                数学2\r\n              </InputItem>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void => handleEjuPoint(val, 'physics')}\r\n              >\r\n                物理\r\n              </InputItem>\r\n              <InputItem\r\n                placeholder=\"请输入成绩\"\r\n                type=\"number\"\r\n                onChange={(val: string): void =>\r\n                  handleEjuPoint(val, 'chemistry')\r\n                }\r\n              >\r\n                化学\r\n              </InputItem>\r\n            </>\r\n          )}\r\n        </List>\r\n        <WhiteSpace size=\"xl\" />\r\n        <PrimaryButton type=\"primary\" onClick={(): void => handleEjuValue()}>\r\n          保存\r\n        </PrimaryButton>\r\n      </DrawerBox>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Page>\r\n        <PageTitle>请完善您的信息</PageTitle>\r\n        <WhiteSpace size=\"xl\" />\r\n        <Steps direction=\"horizontal\" current={1}>\r\n          <Step />\r\n          <Step />\r\n          <Step />\r\n        </Steps>\r\n        <WhiteSpace size=\"xl\" />\r\n        <OthersItem>选填信息（填写该信息开启AI考学分析功能）</OthersItem>\r\n        <WhiteSpace size=\"xl\" />\r\n        <DatePicker\r\n          mode=\"date\"\r\n          onChange={(value): void => handleSelectPick(value, 'birthday')}\r\n          format=\"YYYY-MM-DD\"\r\n        >\r\n          <PickItem placeholder=\"请选择出生日期\" value={birthday} />\r\n        </DatePicker>\r\n        <Picker\r\n          data={gender}\r\n          cols={1}\r\n          value={genderValue}\r\n          onOk={(value: string[]): void => handleSelectPick(value, 'gender')}\r\n        >\r\n          <PickItem placeholder=\"请选择性别\" />\r\n        </Picker>\r\n        <Picker\r\n          data={district.data}\r\n          value={regionValue}\r\n          onOk={(value: string[]): void => handleSelectPick(value, 'region')}\r\n        >\r\n          <PickItem placeholder=\"请选择国内地区\" />\r\n        </Picker>\r\n        <Picker\r\n          data={degree}\r\n          cols={1}\r\n          value={degreeValue}\r\n          onOk={(value: string[]): void => handleSelectPick(value, 'degree')}\r\n        >\r\n          <PickItem placeholder=\"请选择最终学历\" />\r\n        </Picker>\r\n        <Picker\r\n          data={japaneseAbilityCertificate}\r\n          cols={1}\r\n          value={japaneseAbilityCertificateValue}\r\n          onOk={(value: string[]): void =>\r\n            handleSelectPick(value, 'japaneseAbilityCertificate')\r\n          }\r\n        >\r\n          <PickItem placeholder=\"请选择日语能力\" />\r\n        </Picker>\r\n        {japaneseAbilityCertificateValue.length > 0 && (\r\n          <>\r\n            <InputItem\r\n              placeholder=\"请输入日语成绩\"\r\n              type=\"number\"\r\n              onChange={(val): void =>\r\n                setJapaneseAbilityPointValue(Number(val))\r\n              }\r\n            />\r\n            <WhiteSpace size=\"lg\" />\r\n          </>\r\n        )}\r\n        <Picker\r\n          data={englishAbilityCertificate}\r\n          cols={1}\r\n          value={englishAbilityCertificateValue}\r\n          onOk={(value: string[]): void =>\r\n            handleSelectPick(value, 'englishAbilityCertificate')\r\n          }\r\n        >\r\n          <PickItem placeholder=\"请选择英语能力\" />\r\n        </Picker>\r\n        {englishAbilityCertificateValue.length > 0 && (\r\n          <>\r\n            <InputItem\r\n              placeholder=\"请输入英语成绩\"\r\n              type=\"number\"\r\n              onChange={(val): void => setEnglishAbilityPointValue(Number(val))}\r\n            />\r\n            <WhiteSpace size=\"lg\" />\r\n          </>\r\n        )}\r\n        <Picker\r\n          data={goalSchool}\r\n          cols={1}\r\n          value={goalSchoolValue}\r\n          onOk={(value: string[]): void =>\r\n            handleSelectPick(value, 'goalSchool')\r\n          }\r\n        >\r\n          <PickItem placeholder=\"请选择目标院校\" />\r\n        </Picker>\r\n\r\n        <PickItem\r\n          placeholder=\"请输入留考最高成绩\"\r\n          onClick={(): void => setDraweOpen(true)}\r\n          value={ejuValuePoint}\r\n        />\r\n\r\n        <ButtonBox>\r\n          <PrimaryButton\r\n            inline\r\n            type=\"ghost\"\r\n            onClick={(): void => history.push('/')}\r\n          >\r\n            跳过\r\n          </PrimaryButton>\r\n\r\n          <PrimaryButton\r\n            inline\r\n            type=\"primary\"\r\n            onClick={(): void => handleSubmit()}\r\n          >\r\n            下一步\r\n          </PrimaryButton>\r\n        </ButtonBox>\r\n      </Page>\r\n      {drawerOpen && (\r\n        <Drawer\r\n          sidebar={ejuContent()}\r\n          position=\"bottom\"\r\n          open={drawerOpen}\r\n          enableDragHandle\r\n          onOpenChange={(): void => setDraweOpen(!drawerOpen)}\r\n        >\r\n          <div />\r\n        </Drawer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompleteAll;\r\n"],"sourceRoot":""}